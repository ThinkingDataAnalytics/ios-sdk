# Uncomment the next line to define a global platform for your project
# platform :ios, '8.0'

target 'ThinkingSDKDEMO' do
  # Comment the next line if you don't want to use dynamic frameworks
  use_frameworks!
  
  pod "ThinkingSDK", :path => "../"

  pod 'Masonry'

#  pod 'CocoaAsyncSocket', :inhibit_warnings => true
#  pod 'FLEX', :inhibit_warnings => true
#  pod 'MLeaksFinder', :inhibit_warnings => true
#  pod 'FBRetainCycleDetector', :inhibit_warnings => true
#  pod 'HCClangTrace', '~> 1.0.0'
  
  
  target 'ThinkingSDKDEMOUITests' do
    #    pod "ThinkingSDK",:subspecs => ['Source', 'Performance', 'AppLaunch'] , :path=>"../"
    pod "ThinkingSDK", :path => "../"
    pod 'Aspects'
    pod 'YYModel'
    pod 'OCMock'
    pod 'CocoaAsyncSocket'
    pod 'HMCThreadSafeMutableCollection'
  end
end

post_install do |installer|
  
#  installer.pods_project.build_configurations.each do |config|
#    config.build_settings["EXCLUDED_ARCHS[sdk=iphonesimulator*]"] = "arm64"
#  end
  
  find_and_replace("Pods/FBRetainCycleDetector/FBRetainCycleDetector/Layout/Classes/FBClassStrongLayout.mm",
                   "layoutCache[currentClass] = ivars;", "layoutCache[(id<NSCopying>)currentClass] = ivars;")
end

def find_and_replace(dir, findstr, replacestr)
  Dir[dir].each do |name|
    FileUtils.chmod("+w", name) #add
    text = File.read(name)
    replace = text.gsub(findstr,replacestr)
    if text != replace
      puts "Fix: " + name
      File.open(name, "w") { |file| file.puts replace }
      STDOUT.flush
    end
  end
  Dir[dir + '*/'].each(&method(:find_and_replace))
end

